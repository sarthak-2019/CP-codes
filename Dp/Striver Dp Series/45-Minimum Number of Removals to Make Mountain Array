//https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/


class Solution {
public:
    int minimumMountainRemovals(vector<int>& nums) {
        int n=nums.size();
        
        vector<int>dp1(n+2,1),dp2(n+2,1);
        for(int i=1;i<n;i++){
            for(int prev=0;prev<i;prev++){
                if(nums[prev]<nums[i]){
                    dp1[i]=max(dp1[i],1+dp1[prev]);
                }
            }
        }
        for(int i=n-2;i>=0;i--){
            for(int prev=n-1;prev>i;prev--){
                if(nums[prev]<nums[i]){
                    dp2[i]=max(dp2[i],1+dp2[prev]);
                }
            }
        }
        int ans=-1;
        
        for(int i=1;i<n-1;i++){
            if(dp1[i]>1&&dp2[i]>1)
            ans=max(ans,dp1[i]+dp2[i]-1);
        }
 
        return n-ans;
    }
};
