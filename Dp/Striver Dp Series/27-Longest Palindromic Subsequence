//https://leetcode.com/problems/longest-palindromic-subsequence/

class Solution {
public:
    int dp[1005][1005];
    int longestPalindromeSubseq(string s) {
        reverse(s.begin(),s.end());
        string rev=s;
        reverse(s.begin(),s.end());
        int n=s.length();
        memset(dp,0,sizeof(dp));
    
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                if(s[i-1]==rev[j-1]){
                    dp[i][j]=1+dp[i-1][j-1];
                }else{
                     dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
                }
            }
        }
        return dp[n][n];
        
    }
};
