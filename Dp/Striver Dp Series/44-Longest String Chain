//https://leetcode.com/problems/longest-string-chain/


bool compare(string& a,string& b){
	return b.size()>a.size();
}
class Solution {
public:
    bool check(string &a,string &b){

        int n=a.length();
        int m=b.length();
        if(abs(n-m)!=1)
            return false;
        
        int i=0;
        int j=0;
        while(i<n){
            if(a[i]==b[j]){
                i++;
                j++;
            }else{
                i++;
            }
        }
        
        if(i==n&&j==m)
            return true;
        else
            return false;
        
    }
    int longestStrChain(vector<string>& words) {
        int n=words.size();
        vector<int>dp(n,1);
        int ans=1;
      
        sort(words.begin(),words.end(),compare);
        for(int i=0;i<n;i++){
            
            for(int prev=0;prev<i;prev++){
                if(check(words[i],words[prev])){
                    dp[i]=max(dp[i],1+dp[prev]);
                    ans=max(ans,dp[i]);
                }
            }
        }
        return ans;
    }
};
