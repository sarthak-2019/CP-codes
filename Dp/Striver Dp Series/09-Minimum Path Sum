//https://www.codingninjas.com/codestudio/problems/minimum-path-sum_985349


#include <bits/stdc++.h>
int dp[105][105];
int cal(int n,int m,vector<vector<int>> &grid){
    if(n<0||m<0)
        return INT_MAX;
    if(n==0&&m==0)
        return grid[0][0];
    if(dp[n][m]!=-1)
        return dp[n][m];
    int l=cal(n-1,m,grid);
    int r=cal(n,m-1,grid);
    return dp[n][m]=min(l,r)+grid[n][m];
}
int minSumPath(vector<vector<int>> &grid) {
    memset(dp,-1,sizeof(dp));
    int n=grid.size();
    int m=grid[0].size();
//     return cal(n-1,m-1,grid);
    
    dp[0][0]=grid[0][0];
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(i==0&&j==0){
                continue;
            }else{
                int l=INT_MAX;
                int r=INT_MAX;
                if(i-1>=0){
                    l=dp[i-1][j];
                }
                if(j-1>=0){
                    r=dp[i][j-1];
                }
                dp[i][j]=min(l,r)+grid[i][j];
            }
        }
    }
    return dp[n-1][m-1];
}
