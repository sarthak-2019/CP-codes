//https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/

class Solution {
public:
    const static int N=5e3+5;
    int dp[N][3];
    int cal(int ind,int buy,vector<int>& prices){
        if(ind>=prices.size())
            return 0;
        
        if(dp[ind][buy]!=-1)
            return dp[ind][buy];
        if(buy){
            return dp[ind][buy]=max(-prices[ind]+cal(ind+1,0,prices),cal(ind+1,1,prices));
        }else{
            return dp[ind][buy]=max(prices[ind]+cal(ind+2,1,prices),cal(ind+1,0,prices));
        }
    }
    int maxProfit(vector<int>& prices) {
        memset(dp,-1,sizeof(dp));
        return cal(0,1,prices);
    }
};
