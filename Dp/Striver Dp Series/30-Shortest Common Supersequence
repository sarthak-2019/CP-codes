//https://leetcode.com/problems/shortest-common-supersequence


class Solution {
public:
    int dp[1005][1005];
    string shortestCommonSupersequence(string str1, string str2) {
        int n = str1.length();
        int m = str2.length();
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j <= m; j++) {
                if (i == 0 || j == 0)
                    dp[i][j] = 0;
            }
        }
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {

                if (str1[i - 1] == str2[j - 1]) {
                    dp[i][j] = 1 + dp[i - 1][j - 1];
                } else {
                    dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);
                }
            }
        }
        int ind1 = n;
        int ind2 = m;
        string ans = "";
        while (ind1 > 0 && ind2 > 0) {
            if (str1[ind1 - 1] == str2[ind2 - 1]) {
                ans += str1[ind1 - 1] ;
                ind1--;
                ind2--;
                continue;
            }
            if (dp[ind1][ind2 - 1] > dp[ind1 - 1][ind2]) {
                ans += str2[ind2 - 1] ;
                ind2--;
            } else {
                ans += str1[ind1 - 1] ;
                ind1--;
            }
        }
        while(ind1>0){
            ans += str1[ind1 - 1] ;
            ind1--;
        }
        while(ind2>0){
            ans += str2[ind2 - 1] ;
            ind2--;
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
