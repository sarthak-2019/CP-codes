//https://practice.geeksforgeeks.org/problems/boundary-traversal-of-binary-tree/1

class Solution {
public:
    bool isLeaf(Node *cur){
        return !cur->left&&!cur->right;
    } 
    void cal_left(Node *root,vector<int>&res){
        Node *cur=root->left;
        while(cur){
          if(!isLeaf(cur)){
              res.push_back(cur->data);
          }
          if(cur->left)
          cur=cur->left;
          else
          cur=cur->right;
        }
    }
    void cal_right(Node *root,vector<int>&res){
        Node *cur=root->right;
        stack<int>temp;
        while(cur){
          if(!isLeaf(cur)){
                temp.push(cur->data);
          }
          if(cur->right)
          cur=cur->right;
          else
          cur=cur->left;
        }
        while(!temp.empty()){
            res.push_back(temp.top());
            temp.pop();
        }
    }
    void inorder(Node *root,vector<int>&res,bool tell){
        if(isLeaf(root)&&tell){
            res.push_back(root->data);
            return;
        }
        if(root->left)
        inorder(root->left,res,1);
        if(root->right)
        inorder(root->right,res,1);
    }
    vector <int> boundary(Node *root)
    {
        vector<int>res;
        if(!root)
        return res;
        res.push_back(root->data);
        cal_left(root,res);
        inorder(root,res,0);
        cal_right(root,res);
        return res;
    }
};
