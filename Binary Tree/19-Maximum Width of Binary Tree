//https://leetcode.com/problems/maximum-width-of-binary-tree/

class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(!root)
            return 0;
        int ans=0;
        queue<pair<TreeNode*,long long int>>q;
        q.push(make_pair(root,0));
        while(!q.empty()){
            int size=q.size();
            int mn=q.front().second;
            int ff=-1;
            int ss=-1;
            for(int i=0;i<size;i++){
                TreeNode* node=q.front().first;
                long long int id=q.front().second-mn;
                 q.pop();
                if(i==0)
                    ff=id;
                if(i==size-1)
                    ss=id; 
                
                if(node->left){
                    q.push({node->left,2*id+1});
                }
                if(node->right){
                     q.push({node->right,2*id+2});
                }
            }
            ans=max(ans,ss-ff+1);
        }
        return ans;
    }
};
