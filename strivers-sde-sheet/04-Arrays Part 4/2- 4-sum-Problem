// https://leetcode.com/problems/4sum/


class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        int n=nums.size();
        if(n<4){
            return ans;
        }
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                long int target_2=(long int)target-(long int)(nums[i]+nums[j]);
                int front=j+1;
                int back=n-1;
                
                while(front<back){
                    long int target_have=0;
                    target_have+=nums[front];
                    target_have+=nums[back];
                    if(target_have<target_2){
                        front++;
                    }
                    else if(target_have>target_2){
                        back--;
                    }else{
                        vector<int> temp;
                        temp.push_back(nums[i]);
                        temp.push_back(nums[j]);
                        temp.push_back(nums[front]);
                        temp.push_back(nums[back]);
                        ans.push_back(temp);
                        while(front<back&&nums[front]==temp[2])
                            front++;
                         while(front<back&&nums[front]==temp[3])
                            back--;
                    }
                }
                while(j+1<n&&nums[j]==nums[j+1]){
                j++;
              }
            }
            while(i+1<n&&nums[i]==nums[i+1]){
                i++;
            }
        }
        return ans;
    }
};
