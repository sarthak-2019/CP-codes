//https://leetcode.com/problems/combination-sum-ii/


class Solution {
public:
    void cal(int ind,vector<int>& candidates, int target,vector<int>&temp,vector<vector<int>>&ans){
        if(target==0){
            ans.push_back(temp);
        }
        for(int i=ind;i<candidates.size();i++){
            if(i!=ind&&candidates[i]==candidates[i-1])
                continue;
            if(target-candidates[i]>=0){
                temp.push_back(candidates[i]);
                cal(i+1,candidates,target-candidates[i],temp,ans);
                temp.pop_back();
            }
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        vector<vector<int>>ans;
        vector<int>temp;
        cal(0,candidates,target,temp,ans);
        return ans;
        
    }
};
