// https://www.codingninjas.com/codestudio/problems/615?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website


#include <bits/stdc++.h> 

long long merge(long long *arr,long long *temp,int left,int mid,int right){
    int i,j,k;
    long long count=0;
    
    i=left;
    j=mid;
    k=left;
    while((i<=mid-1)&&(j<=right)){
        if(arr[i]<=arr[j]){
            temp[k++]=arr[i++];
        }else{
            temp[k++]=arr[j++];
            count+=(mid-i);
        }
    }
    while(i<=mid-1){
         temp[k++]=arr[i++];
    }
    while(j<=right){
         temp[k++]=arr[j++];
    }
    for(int i=left;i<=right;i++)
        arr[i]=temp[i];
    
    return count;
}

long long mergeSort(long long *arr,long long *temp,int left,int right){
    long long ans=0;
    if(right>left){
         int mid=(left+right)/2;
        ans+=mergeSort(arr,temp,left,mid);
        ans+=mergeSort(arr,temp,mid+1,right);
        ans+=merge(arr,temp,left,mid+1,right);
    }
   return ans;
}
long long getInversions(long long *arr, int n){
    long long temp[n];
    return mergeSort(arr,temp,0,n-1);
}
