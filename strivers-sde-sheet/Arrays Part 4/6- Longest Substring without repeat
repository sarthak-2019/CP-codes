// https://leetcode.com/problems/longest-substring-without-repeating-characters/



Approach-1 Binary Search

class Solution {
public:
    bool check(int num,string str){
        map<char,int> m;
        for(int i=0;i<num;i++){
            m[str[i]]++;
       }
        if(m.size()==num)
            return true;
        for(int i=num;i<str.size();i++){
            m[str[i]]++;
            m[str[i-num]]--;
            if(m[str[i-num]]==0){
                m.erase(str[i-num]);
                
          }
            if(m.size()==num)
            return true;
       }
        return false;
    }
    int lengthOfLongestSubstring(string s) {
        int n=s.length();
        int l=1;
        int u=n;
        int ans=1;
        if(s.size()==0){
           return 0;
        }
        while(l<=u){
            int mid=(l+u)/2;
            if(check(mid,s)){
                ans=mid;
                l=mid+1;
            }
            else
                u=mid-1;
        }
        return ans;
    }
};

Approach-2 Using Two Pointer and a Map
