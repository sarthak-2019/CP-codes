// https://leetcode.com/problems/search-a-2d-matrix/

// Approach 1

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n=matrix.size();
        int m=matrix[0].size();
        
        int l=0;
        int u=m-1;
        
        while(u>=0&&l<n){
            if(matrix[l][u]==target){
                return true;
            }
            if(target<matrix[l][u])
                u--;
            else
                l++;
        }
        return false;
    }
};


// Approach 2 [Using Binary Serach]


class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n=matrix.size();
        int m=matrix[0].size();
        
        int l=0;
        int u=(n*m)-1;
        
        while(l<=u){
            int mid=(l+u)/2;
            
            int l1=mid/m;
            int u1=mid%m;
     
            if(matrix[l1][u1]==target){
                return true;
            }
            if(target<matrix[l1][u1]){
                u=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return false;
    }
};
