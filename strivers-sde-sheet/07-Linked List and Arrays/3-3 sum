//https://leetcode.com/problems/3sum/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>ans;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<=n-3;i++){
            if(i>0&&nums[i]==nums[i-1])
                continue;
            
            int j=i+1;
            int k=n-1;
            
            while(j<k){
                if(nums[i]+nums[j]+nums[k]==0){
                    ans.push_back({nums[i],nums[j],nums[k]});
                    
                    int val1=nums[j];
                    int val2=nums[k];
                    
                    while(j<k&&nums[j]==val1)
                        j++;
                     while(j<k&&nums[k]==val2)
                        k--;
                }
                else if(nums[i]+nums[j]+nums[k]>0){
                    k--;
                }else
                    j++;
            }
        }
        return ans;
    }
};
